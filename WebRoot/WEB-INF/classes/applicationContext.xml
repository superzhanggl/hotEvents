<?xml version="1.0" encoding="UTF-8"?>
<beans  
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    
    
    
    <!-- 导入外部数据库连接配置文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<!-- 指定外部引入的路径 ,name设定值为location ,value指定为properties的配置文件名-->
	    	<property name="location">
	    		<value>classpath:database.properties</value>
	    	</property>
    </bean>
    
    <!-- 配置数据源 -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
	    		<property name="driverClassName" value="${driver}" />  
				<property name="url" value="${url}" />  
				<property name="username" value="${user}" />  
				<property name="password" value="${password}" />
				<property name="initialSize" value="${initialSize}"/><!-- 初始提供的连接数量 -->
				<property name="maxActive" value="${maxActive}"/>
				<property name="maxIdle" value="${maxIdle}"/>
				<property name="minIdle" value="${minIdle}"/>
				<property name="maxWait" value="${maxWait}"/>
				<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
				<property name="removeAbandoned" value="${removeAbandoned}"/>
				<!-- sql 心跳 -->
				<property name= "testWhileIdle" value="true"/>
				<property name= "testOnBorrow" value="false"/>
				<property name= "testOnReturn" value="false"/>
				<property name= "validationQuery" value="select 1"/>
				<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
				<property name= "numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
    
    <!-- 配置sqlSessionFactoryBean -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  		<!-- 导入数据源 -->
			<property name="dataSource" ref="dataSource"/>    
	    	<!-- 导入Mybatis的剩余配置文件 -->
	    	<property name="configLocation" value="classpath:Mybatis-config.xml"/>
	  </bean> 
    
    <!--使用自动扫描映射器,service中引入的dao对象必须是接口,而且ref使用的默认的映射器生成的名称，即指的是接口名 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="cn.hotEvents.dao.*" />
	</bean>
    
  	<!-- service注解扫描 -->
 	<context:component-scan base-package="cn.hotEvents.service.*"/>
    
    <!-- 数据库事务处理 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"/>
   	</bean>
   	
   	<!-- AOP 事务处理 开始 -->    
	 <!-- 定义事务增强,增强方法规则  -->
      <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!--  3、定义切面,由于事务管理是基于AOP来写的，所以语法和AOP类似 -->
   <aop:config>
   		<!-- 定义切入点 -->
        <aop:pointcut id="serviceMethod"
            expression="execution(* cn.hotEvents.service..*.*(..))" />
          <!--   定义切入方法 ,使用advisor通知器 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
    </aop:config>
	<!-- AOP 事务处理 结束 -->
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    </beans>